:root {
  background-color: white;
  color: black;
  font-family: "Geo", sans-serif;
}

header {
  background-color: lightgray;
  min-width: 2000px;
  font-size: 2rem;
  padding: 20px;
  position: fixed;
  top: 0;
  /* This locks the header in place, so that it is always at the top of the screen */
  left: 0;
  height: 70px;
  overflow: hidden;
  /* This means that the text in the header is hidden when it is not at full height, and this is important as the text should only
  be revealed when it is hovered over */
  transition: height 0.5s;
}

header:hover {
  height: 180px;
}
/* I wanted to add simple instructions for those who might need them, but didn't want them to clutter the webpage, so I decided on
having them be revealed by a hover so they were out of the way */

#down {
  position: fixed;
  top: 0;
  right: 0;
  margin: 15px;
  cursor: pointer;
}
/* I needed some way to indicate the header could be hovered on to reveal infomation below, so I decided a simple arrow pointing down
would demonstrate this */

p {
  margin-top: 20px;
  font-size: 1.4rem;
  color: gray;
}

.refs {
  font-size: 1.4rem;
  margin-top: 10px;
  margin-bottom: 10px;
}

body {
  font-size: 1.5rem;
  margin: 220px;
}

.slider-container {
  background-color: gray;
  padding: 30px;
  position: fixed;
  right: 0;
  margin-right: 50px;
  border-radius: 15px;
}
/* I chose to do a slider here instead of a button, as I thought it would look cool if when the slider was 'pulled down', the boxes 
extended down with it, it also makes me think of knobs on a sound engineer board*/

.slider {
  -webkit-appearance: none;
  height: 50%;
  background: lightgray;
  writing-mode: vertical-lr;
  /* I wanted the slider to slot in next to the beats, and so this make the slider appear vertical and not the default horizontal */
  border-radius: 15px;
}

.slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 25px;
  height: 25px;
  background: white;
  cursor: pointer;
  border-radius: 50%;
  scale: 1.5;
}

.slider:hover::-webkit-slider-thumb {
  background-color: lightgreen;
  transition: background-color 0.3s;
}

#beat5,
#beat6,
#beat7,
#beat8,
#beat9,
#beat10,
#beat11,
#beat12,
#beat13,
#beat14,
#beat15,
#beat16 {
  display: none;
}
/* This makes it so that when you first go on the page, only 4 beats are visible for simplicity, and more can then be toggle on,
I originally used visibility:hidden, but this only made it invisible, leaving a gap on the page */

#interface {
  display: grid;
  /* I chose grid here as the drums and beats are are arranged in a grid for the design plan, so I thought a grid would make more sense
  than a flexbox. I also has not used a grid yet this semester, so felt it would be useful to practice */
  gap: 15px;
  text-align: center;
  grid-template-columns: 1fr 1fr 1fr 1fr;
  /* This makes it so the each row of the grid only has a maximum of 4 elements */
  margin-top: 190px;
  margin-bottom: 50px;
}

.beats {
  background-color: gray;
  padding: 80px;
  border-radius: 20px;
  max-height: 160px;
  cursor: pointer;
}

.drums {
  background-color: lightgray;
  padding: 80px;
  cursor: grab;
  max-height: 120px;
  border-radius: 20px;
}

.drums:hover {
  background-color: lightgreen;
  transition: background-color 0.3s;
  /* This is to indicate the box can be selected */
}

.butts {
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 15px;
}

.buttons {
  color: black;
  max-width: 120px;
  max-height: 80px;
  cursor: pointer;
  padding: 10px;
  border: none;
  border-radius: 10px;
  box-shadow: 0 7px #999;
  /* I researched ways to make a button appear as if it is pressed (as I wanted greater interactivity), and one technique was 
  adding a box-shadow, that gets smaller when pressed, and so I decided to impliment this */
  transition: background-color 0.1s;
}

.buttons:hover {
  background-color: lightgreen;
  border-radius: 10%;
}

.buttons:active {
  box-shadow: 0 4px #999;
  transform: translateY(3px);
}

.buttons:disabled {
  color: white;
  background-color: lightgray;
  cursor: default;
}

.slider-container:disabled {
  background-color: lightgray;
}

#power {
  padding: 30px;
  position: relative;
}

#power-img {
  position: absolute;
  top: -10px;
  left: 5px;
  height: 70px;
  width: 200px;
  /* I wanted the stick to poke out from the button, so it appeared as if the button, was the 'drum'. I researched ways to do this
  and found that making the position absolute and then moving the icon into the right position achieved this */
}

footer {
  position: fixed;
  bottom: 0px;
  left: 0;
  background-color: lightgray;
  width: 100%;
  padding: 5px;
}
